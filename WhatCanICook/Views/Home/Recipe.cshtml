@model WhatCanICook.Models.ReciepeModel
@{
    ViewBag.Title = "Recipe";
}

<!DOCTYPE html>
<html>
<head>
    <title>What Can I Cook?</title>
    <link href="~/Styles/styleRecipePage.css" rel="stylesheet" />

    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap"
          rel="stylesheet" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">
    <script type="text/javascript">
        function insertItemIntoListBox() {
            var x = document.getElementById("access");
            var item = document.getElementById("txtItem").value;
            var option = document.createElement("option");
            option.text = item;
            x.add(option);
            document.getElementById("txtItem").value = "";
            //alert(item + " has been added.");
        }
    </script>
</head>

<body>
    <!-- Navigation bar -->
 
    <div class="account-details">
        <h3>Make a reciepe: </h3>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="box">
                <label>Reciepe Name:</label>
                @Html.EditorFor(model => model.Name)
            </div>
            @*
            <label>Add ingredient:</label>
            <input type="text" placeholder="Type an ingredient" id="txtItem">
            <p><input type="button" onclick="insertItemIntoListBox()" value="Add it to the list" /></p>
            <br><br>
            <select id="access" size="10">
            </select>*@

            <div class="box big">
                <label>Write a description for the recipe:</label>
                @Html.TextAreaFor(model => model.Description)
            </div>

            <div class="box big">
                <label>Write the full ingredient list and the detailed steps:</label>
                @Html.TextAreaFor(model => model.Instructions)
            </div>
            <div>
                @*<label>Image:</label>
                <div>
                    @Html.EditorFor(model => model.ImageUrl)
                </div>*@
            </div>
             
            <div class="x">
                <strong><label>Key ingredients: </label></strong>
                <label>(Used for searching the recipe)</label>

</div>
                <div class="ingredients">
                    <label>First Ingredient</label>
                    @Html.EditorFor(model => model.Ingredient1, new { htmlAttributes = new { @Value = "Empty"} })

                    <label>Second Ingredient</label>
                    @Html.EditorFor(model => model.Ingredient2, new { htmlAttributes = new { @Value = "Empty" } })

                    <label>Third Ingredient</label>
                    @Html.EditorFor(model => model.Ingredient3, new { htmlAttributes = new { @Value = "Empty" } })

                    <label>Forth Ingredient</label>
                    @Html.EditorFor(model => model.Ingredient4, new { htmlAttributes = new { @Value = "Empty" } })

                    <label>Fifth Ingredient</label>
                    @Html.EditorFor(model => model.Ingredient5, new { htmlAttributes = new { @Value = "Empty" } })
                </div>
                <div class="details">
                    <label>Author: </label>
                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @Value = @WebApplication1.Controllers.AccountController.userModel.FirstName + " " + @WebApplication1.Controllers.AccountController.userModel.LastName } })

                </div>
                <button type="submit">Save</button>
                }

            </div>


</body>
</html>