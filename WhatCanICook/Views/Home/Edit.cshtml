@model WhatCanICook.Models.UserViewModel
@{
    ViewBag.Title = "Edit";

}

<!DOCTYPE html>
<html>
<head>
    <title>What Can I Cook?</title>
    <link href="~/Styles/styleEditPage.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap"
          rel="stylesheet" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">
</head>

<body>

    <div class="account-details">
        <h3>Your details: </h3>

        @using (Html.BeginForm())
        {
            /* "Account", "Home"*/
            @Html.AntiForgeryToken()

    <div class="box">
        <label>Email:</label>
        @Html.TextBoxFor(model => model.Email,
        new { disabled = "disabled", @readonly = "readonly", @Value = @WebApplication1.Controllers.AccountController.userModel.Email, @class = "text-box" })
       @* @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { htmlAttributes = new { @Value = @WebApplication1.Controllers.AccountController.userModel.FirstName, readonly = "readonly" }})*@
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

    </div>

            <div class="box">
                <label>First Name:</label>
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @Value = @WebApplication1.Controllers.AccountController.userModel.FirstName } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            </div>

            <div class="box">
                <label>Last Name:</label>
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @Value = @WebApplication1.Controllers.AccountController.userModel.LastName } })
            </div>

            <div class="box">
                <label>Password:</label>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @Value = @WebApplication1.Controllers.AccountController.userModel.Password } })
            </div>

            <div class="box">
                <div class="radio-box form-group">
                    <p>Choose a food preference: </p>

                    <div class="col-md-10">
                        @Html.RadioButtonFor(model => model.FoodPreferance, "None", new { @checked = true })
                        @Html.LabelFor(model => model.FoodPreferance, "None")
                        @Html.ValidationMessageFor(model => model.FoodPreferance, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.RadioButtonFor(model => model.FoodPreferance, "Vegetarian", new { @checked = true })
                        @Html.LabelFor(model => model.FoodPreferance, "Vegetarian")
                        @Html.ValidationMessageFor(model => model.FoodPreferance, "", new { @class = "text-danger" })
                    </div>
                    <div>
                        @Html.RadioButtonFor(model => model.FoodPreferance, "Vegan", new { @checked = true })
                        @Html.LabelFor(model => model.FoodPreferance, "Vegan")
                        @Html.ValidationMessageFor(model => model.FoodPreferance, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <button type="submit">Save</button>
        }

    </div>


</body>
</html>